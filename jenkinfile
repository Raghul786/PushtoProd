pipeline {
    agent any // Run on any available agent

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'develop', url: 'https://github.com/Raghul786/PushtoProd' // Fetch code from develop branch
            }
        }

   stage('Test') {
    node {
        label 'test-node' // Replace with your test node label
    }
    steps {
        git branch: 'develop', credentialsId: 'your-git-credentials-id', url: 'https://github.com/Raghul786/PushtoProd', gitTool: 'installed-git' // Replace with your configured Git tool name
        // Other test steps...
    }
}

            steps {
                script {
                    // Assuming your project files are in a subdirectory called "project" within the workspace
                    def sourceDir = "${env.WORKSPACE}/project"

                    // Use chosen method to copy files to test server (e.g., scp, rsync)
                    sh "scp -r ${sourceDir} ubuntu@3.92.162.162:/home/ubuntu"
                        .replace("3.92.162.162", "54.162.5.248") // Replace with test server IP

                    // Add your test commands here (e.g., unit tests, integration tests)
                    sh 'sh /path/to/your/test.sh' // Replace with your actual test script path
                }
            }
            post { // Actions to perform after the stage
                success { // If test stage succeeds
                    build job: 'prod' // Trigger the prod job
                }
            }
        }

        stage('Prod') {
            agent { node { label 'prod-node' } } // Run on agent named prod-node
            when {
                expression { // Run only if previous stage succeeds (test job)
                    return success
                }
            }
            steps {
                script {
                    // Assuming your project files are in a subdirectory called "project" within the workspace
                    def sourceDir = "${env.WORKSPACE}/project"

                    // Use chosen method to copy files to production server (e.g., scp, rsync)
                    sh "scp -r ${sourceDir} ubuntu@<prod_server_ip>:/home/ubuntu"
                        .replace("<prod_server_ip>", "your_production_server_ip") // Replace with production server IP
                }
            }
        }
    }
}
